#!/bin/zsh
set -euf -o pipefail

##
# Launch tmux suitable for Rails development.
#
# Syntax:
#
#     tmux-rails [session-name]
#
# This script attaches to session-name (and creates it if needed).
#
# The _session-name_ defaults to the basename of the pwd.
#
#
# This launches these windows with these commands:
#
#   * !1:edit = $EDITOR
#   * @2:test = bundle exec bin/rake test
#   * #3:log = cd log && tail -f log/development.log
#   * $4:con = rails console
#   * %5:db = rails db
#   * ^6:server = rails server
#   * &6:deploy = rake deploy
#
# Author: Joel Parker Henderson (joel@joelparkerhenderson.com)
# License: GPL
# Updated: 2015-02-16
##

if [ -z ${TMUX+x} ]; then
    # noop
else
    echo "TMUX environment variable is alread set, so exit"
    exit 1
fi

# The session name defaults to the current directory's basename.
s=${1-`basename \`pwd\``}

# Set the name the terminal window to the session name.
# This line is optional -- you may comment it out if you prefer.
# You may prefer to set your own title, or may already be using
# something such as zsh auto title, or OSX iTerm2 appearance settings
# to automatically set window & tab titles, or some other approach.
echo -e "\033]1;$s\007"

# Create the new session.
tmux new-session -d -s "$s"

# Create the windows.
tmux rename-window  "ed"
tmux new-window -d -n "qa"
tmux new-window -d -n "log"
tmux new-window -d -n "console"
tmux new-window -d -n "db"
tmux new-window -d -n "server"

# Send keys.
tmux send-keys -t "ed" "$EDITOR" C-m
tmux send-keys -t "qa" "bundle exec rake spec" C-m
tmux send-keys -t "log" "cd log && tail -f development.log" C-m
tmux send-keys -t "console" "bundle exec rails console" C-m
tmux send-keys -t "db" "bundle exec rails db" C-m
tmux send-keys -t "server" "bundle exec rails server" C-m

# Last step: attatch to the session.
tmux -2 attach-session -d
