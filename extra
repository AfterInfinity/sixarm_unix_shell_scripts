#!/bin/sh
#
# Print the lines that are in the last input, not other inputs.
#
# Syntax:
#
#     extra <input> ...
#
# Examples:
#
#     extra a.txt b.txt
#     => lines that are not in a.txt but are in b.txt
#
#     extra a.txt b.txt c.txt
#     => lines that are not in a.txt nor b.txt but are in c.txt.
#
# ## Specifics
#
# The order does not matter.
#
# ## Related
#
# These commands are related:
#
#   * `union`: print lines in (A union B)
#   * `intersect`: print lines in (A intersect B)
#   * `except`: print lines in (A except B) a.k.a. (A - B)
#   * `extra` : print lines in (A extra B) a.k.a. (B - A)
#
# ## Notes
#
# In set theory, this is (B minus A) a.k.a. (B except A).
#
# This command aims to be fast; it does not sort.
#
# This command is currently implemented using `awk` and POSIX.
#
# ## Tracking
#
# Program: extra
# Version: 2.0.2
# Created: 2017-01-30
# Updated: 2017-01-30
# License: GPL
# Contact: Joel Parker Henderson (joel@joelparkerhenderson.com)
##
set -eu
awk 'BEGIN{argindmax=ARGC-1} FNR==1{argind+=1} argind<argindmax {seen[$0]; next}!($0 in seen)' "$@"
